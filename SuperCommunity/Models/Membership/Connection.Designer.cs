//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Albums_ToUsers", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.UserProfile), "Albums", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.Album), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Pictures_ToAlbums", "Albums", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.Album), "Pictures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.Picture), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Forms_ToUserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.UserProfile), "Forms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.Form), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_InfoUsers_ToUserprofile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.UserProfile), "InfoUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SuperCommunity.Models.Membership.InfoUser), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PictureTags_ToPictures", "Pictures", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.Picture), "PictureTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.PictureTag), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Votes_ToPictures", "Pictures", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.Picture), "Votes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.Vote), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_PictureTags_ToTags", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.Tag), "PictureTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.PictureTag), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Votes_ToUserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SuperCommunity.Models.Membership.UserProfile), "Votes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.Vote), true)]
[assembly: EdmRelationshipAttribute("Model", "webpages_UsersInRoles", "webpages_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.webpages_Roles), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SuperCommunity.Models.Membership.UserProfile))]

#endregion

namespace SuperCommunity.Models.Membership
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MyEntities object using the connection string found in the 'MyEntities' section of the application configuration file.
        /// </summary>
        public MyEntities() : base("name=MyEntities", "MyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyEntities object.
        /// </summary>
        public MyEntities(string connectionString) : base(connectionString, "MyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyEntities object.
        /// </summary>
        public MyEntities(EntityConnection connection) : base(connection, "MyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> Albums
        {
            get
            {
                if ((_Albums == null))
                {
                    _Albums = base.CreateObjectSet<Album>("Albums");
                }
                return _Albums;
            }
        }
        private ObjectSet<Album> _Albums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Form> Forms
        {
            get
            {
                if ((_Forms == null))
                {
                    _Forms = base.CreateObjectSet<Form>("Forms");
                }
                return _Forms;
            }
        }
        private ObjectSet<Form> _Forms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoUser> InfoUsers
        {
            get
            {
                if ((_InfoUsers == null))
                {
                    _InfoUsers = base.CreateObjectSet<InfoUser>("InfoUsers");
                }
                return _InfoUsers;
            }
        }
        private ObjectSet<InfoUser> _InfoUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PictureTag> PictureTags
        {
            get
            {
                if ((_PictureTags == null))
                {
                    _PictureTags = base.CreateObjectSet<PictureTag>("PictureTags");
                }
                return _PictureTags;
            }
        }
        private ObjectSet<PictureTag> _PictureTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vote> Votes
        {
            get
            {
                if ((_Votes == null))
                {
                    _Votes = base.CreateObjectSet<Vote>("Votes");
                }
                return _Votes;
            }
        }
        private ObjectSet<Vote> _Votes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Membership> webpages_Membership
        {
            get
            {
                if ((_webpages_Membership == null))
                {
                    _webpages_Membership = base.CreateObjectSet<webpages_Membership>("webpages_Membership");
                }
                return _webpages_Membership;
            }
        }
        private ObjectSet<webpages_Membership> _webpages_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_OAuthMembership> webpages_OAuthMembership
        {
            get
            {
                if ((_webpages_OAuthMembership == null))
                {
                    _webpages_OAuthMembership = base.CreateObjectSet<webpages_OAuthMembership>("webpages_OAuthMembership");
                }
                return _webpages_OAuthMembership;
            }
        }
        private ObjectSet<webpages_OAuthMembership> _webpages_OAuthMembership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Roles> webpages_Roles
        {
            get
            {
                if ((_webpages_Roles == null))
                {
                    _webpages_Roles = base.CreateObjectSet<webpages_Roles>("webpages_Roles");
                }
                return _webpages_Roles;
            }
        }
        private ObjectSet<webpages_Roles> _webpages_Roles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Albums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbums(Album album)
        {
            base.AddObject("Albums", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForms(Form form)
        {
            base.AddObject("Forms", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoUsers(InfoUser infoUser)
        {
            base.AddObject("InfoUsers", infoUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PictureTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictureTags(PictureTag pictureTag)
        {
            base.AddObject("PictureTags", pictureTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Votes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVotes(Vote vote)
        {
            base.AddObject("Votes", vote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Membership(webpages_Membership webpages_Membership)
        {
            base.AddObject("webpages_Membership", webpages_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_OAuthMembership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_OAuthMembership(webpages_OAuthMembership webpages_OAuthMembership)
        {
            base.AddObject("webpages_OAuthMembership", webpages_OAuthMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Roles(webpages_Roles webpages_Roles)
        {
            base.AddObject("webpages_Roles", webpages_Roles);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="albumName">Initial value of the AlbumName property.</param>
        public static Album CreateAlbum(global::System.Int32 albumId, global::System.Int32 userId, global::System.String albumName)
        {
            Album album = new Album();
            album.AlbumId = albumId;
            album.UserId = userId;
            album.AlbumName = albumName;
            return album;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                if (_AlbumId != value)
                {
                    OnAlbumIdChanging(value);
                    ReportPropertyChanging("AlbumId");
                    _AlbumId = StructuralObject.SetValidValue(value, "AlbumId");
                    ReportPropertyChanged("AlbumId");
                    OnAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlbumName
        {
            get
            {
                return _AlbumName;
            }
            set
            {
                OnAlbumNameChanging(value);
                ReportPropertyChanging("AlbumName");
                _AlbumName = StructuralObject.SetValidValue(value, false, "AlbumName");
                ReportPropertyChanged("AlbumName");
                OnAlbumNameChanged();
            }
        }
        private global::System.String _AlbumName;
        partial void OnAlbumNameChanging(global::System.String value);
        partial void OnAlbumNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Albums_ToUsers", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Albums_ToUsers", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Albums_ToUsers", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Albums_ToUsers", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("Model.FK_Albums_ToUsers", "UserProfile", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Pictures_ToAlbums", "Pictures")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("Model.FK_Pictures_ToAlbums", "Pictures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("Model.FK_Pictures_ToAlbums", "Pictures", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="formId">Initial value of the FormId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="aboutMe">Initial value of the AboutMe property.</param>
        /// <param name="myPhoto">Initial value of the MyPhoto property.</param>
        public static Form CreateForm(global::System.Int32 formId, global::System.Int32 userId, global::System.String aboutMe, global::System.String myPhoto)
        {
            Form form = new Form();
            form.FormId = formId;
            form.UserId = userId;
            form.AboutMe = aboutMe;
            form.MyPhoto = myPhoto;
            return form;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormId
        {
            get
            {
                return _FormId;
            }
            set
            {
                if (_FormId != value)
                {
                    OnFormIdChanging(value);
                    ReportPropertyChanging("FormId");
                    _FormId = StructuralObject.SetValidValue(value, "FormId");
                    ReportPropertyChanged("FormId");
                    OnFormIdChanged();
                }
            }
        }
        private global::System.Int32 _FormId;
        partial void OnFormIdChanging(global::System.Int32 value);
        partial void OnFormIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AboutMe
        {
            get
            {
                return _AboutMe;
            }
            set
            {
                OnAboutMeChanging(value);
                ReportPropertyChanging("AboutMe");
                _AboutMe = StructuralObject.SetValidValue(value, false, "AboutMe");
                ReportPropertyChanged("AboutMe");
                OnAboutMeChanged();
            }
        }
        private global::System.String _AboutMe;
        partial void OnAboutMeChanging(global::System.String value);
        partial void OnAboutMeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MyPhoto
        {
            get
            {
                return _MyPhoto;
            }
            set
            {
                OnMyPhotoChanging(value);
                ReportPropertyChanging("MyPhoto");
                _MyPhoto = StructuralObject.SetValidValue(value, false, "MyPhoto");
                ReportPropertyChanged("MyPhoto");
                OnMyPhotoChanged();
            }
        }
        private global::System.String _MyPhoto;
        partial void OnMyPhotoChanging(global::System.String value);
        partial void OnMyPhotoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Forms_ToUserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Forms_ToUserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Forms_ToUserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Forms_ToUserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("Model.FK_Forms_ToUserProfile", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="InfoUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoUser object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static InfoUser CreateInfoUser(global::System.Int32 userId, global::System.String email)
        {
            InfoUser infoUser = new InfoUser();
            infoUser.UserId = userId;
            infoUser.Email = email;
            return infoUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InfoUsers_ToUserprofile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_InfoUsers_ToUserprofile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_InfoUsers_ToUserprofile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_InfoUsers_ToUserprofile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("Model.FK_InfoUsers_ToUserprofile", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="pictureName">Initial value of the PictureName property.</param>
        /// <param name="pictureUrl">Initial value of the PictureUrl property.</param>
        public static Picture CreatePicture(global::System.Int32 pictureId, global::System.Int32 albumId, global::System.String pictureName, global::System.String pictureUrl)
        {
            Picture picture = new Picture();
            picture.PictureId = pictureId;
            picture.AlbumId = albumId;
            picture.PictureName = pictureName;
            picture.PictureUrl = pictureUrl;
            return picture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                if (_PictureId != value)
                {
                    OnPictureIdChanging(value);
                    ReportPropertyChanging("PictureId");
                    _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                    ReportPropertyChanged("PictureId");
                    OnPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                OnAlbumIdChanging(value);
                ReportPropertyChanging("AlbumId");
                _AlbumId = StructuralObject.SetValidValue(value, "AlbumId");
                ReportPropertyChanged("AlbumId");
                OnAlbumIdChanged();
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PictureName
        {
            get
            {
                return _PictureName;
            }
            set
            {
                OnPictureNameChanging(value);
                ReportPropertyChanging("PictureName");
                _PictureName = StructuralObject.SetValidValue(value, false, "PictureName");
                ReportPropertyChanged("PictureName");
                OnPictureNameChanged();
            }
        }
        private global::System.String _PictureName;
        partial void OnPictureNameChanging(global::System.String value);
        partial void OnPictureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PictureUrl
        {
            get
            {
                return _PictureUrl;
            }
            set
            {
                OnPictureUrlChanging(value);
                ReportPropertyChanging("PictureUrl");
                _PictureUrl = StructuralObject.SetValidValue(value, false, "PictureUrl");
                ReportPropertyChanged("PictureUrl");
                OnPictureUrlChanged();
            }
        }
        private global::System.String _PictureUrl;
        partial void OnPictureUrlChanging(global::System.String value);
        partial void OnPictureUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureDescribe
        {
            get
            {
                return _PictureDescribe;
            }
            set
            {
                OnPictureDescribeChanging(value);
                ReportPropertyChanging("PictureDescribe");
                _PictureDescribe = StructuralObject.SetValidValue(value, true, "PictureDescribe");
                ReportPropertyChanged("PictureDescribe");
                OnPictureDescribeChanged();
            }
        }
        private global::System.String _PictureDescribe;
        partial void OnPictureDescribeChanging(global::System.String value);
        partial void OnPictureDescribeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Pictures_ToAlbums", "Albums")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Model.FK_Pictures_ToAlbums", "Albums").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Model.FK_Pictures_ToAlbums", "Albums").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Model.FK_Pictures_ToAlbums", "Albums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("Model.FK_Pictures_ToAlbums", "Albums", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PictureTags_ToPictures", "PictureTags")]
        public EntityCollection<PictureTag> PictureTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PictureTag>("Model.FK_PictureTags_ToPictures", "PictureTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PictureTag>("Model.FK_PictureTags_ToPictures", "PictureTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Votes_ToPictures", "Votes")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("Model.FK_Votes_ToPictures", "Votes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("Model.FK_Votes_ToPictures", "Votes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PictureTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PictureTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PictureTag object.
        /// </summary>
        /// <param name="pictureTagId">Initial value of the PictureTagId property.</param>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        public static PictureTag CreatePictureTag(global::System.Int32 pictureTagId, global::System.Int32 pictureId, global::System.Int32 tagId)
        {
            PictureTag pictureTag = new PictureTag();
            pictureTag.PictureTagId = pictureTagId;
            pictureTag.PictureId = pictureId;
            pictureTag.TagId = tagId;
            return pictureTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureTagId
        {
            get
            {
                return _PictureTagId;
            }
            set
            {
                if (_PictureTagId != value)
                {
                    OnPictureTagIdChanging(value);
                    ReportPropertyChanging("PictureTagId");
                    _PictureTagId = StructuralObject.SetValidValue(value, "PictureTagId");
                    ReportPropertyChanged("PictureTagId");
                    OnPictureTagIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureTagId;
        partial void OnPictureTagIdChanging(global::System.Int32 value);
        partial void OnPictureTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value, "TagId");
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PictureTags_ToPictures", "Pictures")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_PictureTags_ToPictures", "Pictures").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_PictureTags_ToPictures", "Pictures").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_PictureTags_ToPictures", "Pictures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("Model.FK_PictureTags_ToPictures", "Pictures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PictureTags_ToTags", "Tags")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Model.FK_PictureTags_ToTags", "Tags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Model.FK_PictureTags_ToTags", "Tags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Model.FK_PictureTags_ToTags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("Model.FK_PictureTags_ToTags", "Tags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static Tag CreateTag(global::System.Int32 tagId, global::System.String tagName)
        {
            Tag tag = new Tag();
            tag.TagId = tagId;
            tag.TagName = tagName;
            return tag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                if (_TagId != value)
                {
                    OnTagIdChanging(value);
                    ReportPropertyChanging("TagId");
                    _TagId = StructuralObject.SetValidValue(value, "TagId");
                    ReportPropertyChanged("TagId");
                    OnTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_PictureTags_ToTags", "PictureTags")]
        public EntityCollection<PictureTag> PictureTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PictureTag>("Model.FK_PictureTags_ToTags", "PictureTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PictureTag>("Model.FK_PictureTags_ToTags", "PictureTags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 userId)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserId = userId;
            return userProfile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Albums_ToUsers", "Albums")]
        public EntityCollection<Album> Albums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Album>("Model.FK_Albums_ToUsers", "Albums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Album>("Model.FK_Albums_ToUsers", "Albums", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Forms_ToUserProfile", "Forms")]
        public EntityCollection<Form> Forms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Form>("Model.FK_Forms_ToUserProfile", "Forms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Form>("Model.FK_Forms_ToUserProfile", "Forms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_InfoUsers_ToUserprofile", "InfoUsers")]
        public InfoUser InfoUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoUser>("Model.FK_InfoUsers_ToUserprofile", "InfoUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoUser>("Model.FK_InfoUsers_ToUserprofile", "InfoUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoUser> InfoUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoUser>("Model.FK_InfoUsers_ToUserprofile", "InfoUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoUser>("Model.FK_InfoUsers_ToUserprofile", "InfoUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Votes_ToUserProfile", "Votes")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("Model.FK_Votes_ToUserProfile", "Votes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("Model.FK_Votes_ToUserProfile", "Votes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "webpages_UsersInRoles", "webpages_Roles")]
        public EntityCollection<webpages_Roles> webpages_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<webpages_Roles>("Model.webpages_UsersInRoles", "webpages_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<webpages_Roles>("Model.webpages_UsersInRoles", "webpages_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Vote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vote object.
        /// </summary>
        /// <param name="voteId">Initial value of the VoteId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="like">Initial value of the Like property.</param>
        /// <param name="dislike">Initial value of the Dislike property.</param>
        public static Vote CreateVote(global::System.Int32 voteId, global::System.Int32 userId, global::System.Int32 pictureId, global::System.Boolean like, global::System.Boolean dislike)
        {
            Vote vote = new Vote();
            vote.VoteId = voteId;
            vote.UserId = userId;
            vote.PictureId = pictureId;
            vote.Like = like;
            vote.Dislike = dislike;
            return vote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoteId
        {
            get
            {
                return _VoteId;
            }
            set
            {
                if (_VoteId != value)
                {
                    OnVoteIdChanging(value);
                    ReportPropertyChanging("VoteId");
                    _VoteId = StructuralObject.SetValidValue(value, "VoteId");
                    ReportPropertyChanged("VoteId");
                    OnVoteIdChanged();
                }
            }
        }
        private global::System.Int32 _VoteId;
        partial void OnVoteIdChanging(global::System.Int32 value);
        partial void OnVoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Like
        {
            get
            {
                return _Like;
            }
            set
            {
                OnLikeChanging(value);
                ReportPropertyChanging("Like");
                _Like = StructuralObject.SetValidValue(value, "Like");
                ReportPropertyChanged("Like");
                OnLikeChanged();
            }
        }
        private global::System.Boolean _Like;
        partial void OnLikeChanging(global::System.Boolean value);
        partial void OnLikeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Dislike
        {
            get
            {
                return _Dislike;
            }
            set
            {
                OnDislikeChanging(value);
                ReportPropertyChanging("Dislike");
                _Dislike = StructuralObject.SetValidValue(value, "Dislike");
                ReportPropertyChanged("Dislike");
                OnDislikeChanged();
            }
        }
        private global::System.Boolean _Dislike;
        partial void OnDislikeChanging(global::System.Boolean value);
        partial void OnDislikeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Votes_ToPictures", "Pictures")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_Votes_ToPictures", "Pictures").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_Votes_ToPictures", "Pictures").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Model.FK_Votes_ToPictures", "Pictures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("Model.FK_Votes_ToPictures", "Pictures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Votes_ToUserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Votes_ToUserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Votes_ToUserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("Model.FK_Votes_ToUserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("Model.FK_Votes_ToUserProfile", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="webpages_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFailuresSinceLastSuccess">Initial value of the PasswordFailuresSinceLastSuccess property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        public static webpages_Membership Createwebpages_Membership(global::System.Int32 userId, global::System.Int32 passwordFailuresSinceLastSuccess, global::System.String password, global::System.String passwordSalt)
        {
            webpages_Membership webpages_Membership = new webpages_Membership();
            webpages_Membership.UserId = userId;
            webpages_Membership.PasswordFailuresSinceLastSuccess = passwordFailuresSinceLastSuccess;
            webpages_Membership.Password = password;
            webpages_Membership.PasswordSalt = passwordSalt;
            return webpages_Membership;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true, "ConfirmationToken");
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value, "IsConfirmed");
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value, "LastPasswordFailureDate");
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value, "PasswordFailuresSinceLastSuccess");
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private global::System.Int32 _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(global::System.Int32 value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value, "PasswordChangedDate");
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false, "PasswordSalt");
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true, "PasswordVerificationToken");
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value, "PasswordVerificationTokenExpirationDate");
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="webpages_OAuthMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_OAuthMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_OAuthMembership object.
        /// </summary>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="providerUserId">Initial value of the ProviderUserId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static webpages_OAuthMembership Createwebpages_OAuthMembership(global::System.String provider, global::System.String providerUserId, global::System.Int32 userId)
        {
            webpages_OAuthMembership webpages_OAuthMembership = new webpages_OAuthMembership();
            webpages_OAuthMembership.Provider = provider;
            webpages_OAuthMembership.ProviderUserId = providerUserId;
            webpages_OAuthMembership.UserId = userId;
            return webpages_OAuthMembership;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                if (_Provider != value)
                {
                    OnProviderChanging(value);
                    ReportPropertyChanging("Provider");
                    _Provider = StructuralObject.SetValidValue(value, false, "Provider");
                    ReportPropertyChanged("Provider");
                    OnProviderChanged();
                }
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                if (_ProviderUserId != value)
                {
                    OnProviderUserIdChanging(value);
                    ReportPropertyChanging("ProviderUserId");
                    _ProviderUserId = StructuralObject.SetValidValue(value, false, "ProviderUserId");
                    ReportPropertyChanged("ProviderUserId");
                    OnProviderUserIdChanged();
                }
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="webpages_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static webpages_Roles Createwebpages_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            webpages_Roles webpages_Roles = new webpages_Roles();
            webpages_Roles.RoleId = roleId;
            webpages_Roles.RoleName = roleName;
            return webpages_Roles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "webpages_UsersInRoles", "UserProfile")]
        public EntityCollection<UserProfile> UserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("Model.webpages_UsersInRoles", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("Model.webpages_UsersInRoles", "UserProfile", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
